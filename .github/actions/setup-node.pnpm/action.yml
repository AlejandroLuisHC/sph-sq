name: "Setup Node.js and pnpm"
description: "Setup Node.js with pnpm and install dependencies"

inputs:
  node-version:
    description: "Node.js version to use"
    required: false
    default: "20"
  pnpm-version:
    description: "pnpm version to use"
    required: false
    default: "9"
  install-deps:
    description: "Whether to install dependencies"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Get pnpm store directory
      if: inputs.install-deps == 'true'
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      if: inputs.install-deps == 'true'
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      if: inputs.install-deps == 'true'
      shell: bash
      run: |
        # Try frozen-lockfile first, fallback to regular install if lockfile is outdated
        if ! pnpm install --frozen-lockfile; then
          echo "⚠️  Lockfile is outdated, regenerating..."
          pnpm install
        fi